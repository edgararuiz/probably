% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cal-binary.R
\name{cal_binary_plot_breaks}
\alias{cal_binary_plot_breaks}
\alias{cal_binary_plot_logistic}
\alias{cal_binary_plot_windowed}
\title{Probability Calibration plots}
\usage{
cal_binary_plot_breaks(
  .data,
  truth = NULL,
  estimate = NULL,
  group = NULL,
  num_breaks = 10,
  conf_level = 0.9,
  include_ribbon = TRUE,
  include_rug = TRUE,
  event_level = c("first", "second")
)

cal_binary_plot_logistic(
  .data,
  truth = NULL,
  estimate = NULL,
  group = NULL,
  conf_level = 0.9,
  include_rug = TRUE,
  include_ribbon = TRUE,
  event_level = c("first", "second")
)

cal_binary_plot_windowed(
  .data,
  truth = NULL,
  estimate = NULL,
  group = NULL,
  window_size = round(nrow(.data)/10),
  step_size = window_size,
  conf_level = 0.9,
  include_ribbon = TRUE,
  include_rug = TRUE,
  event_level = c("first", "second")
)
}
\arguments{
\item{.data}{A data.frame object containing predictions and probability columns}

\item{truth}{The column identifier for the true class results
(that is a factor). This should be an unquoted column name}

\item{estimate}{The column identifier for the prediction probabilities.
This should be an unquoted column name}

\item{group}{The column identifier to group the results.}

\item{num_breaks}{The number of segments to group the probabilities. Defaults
to 10}

\item{conf_level}{Confidence level to use in the visualization. Defaults to 0.9}

\item{include_ribbon}{Flag that indicates if the ribbon layer is to be
included. Defaults to \code{TRUE}}

\item{include_rug}{Flag that indicates if the Rug layer is to be included.
Defaults to \code{TRUE}}

\item{event_level}{single string. Either "first" or "second" to specify which
level of truth to consider as the "event".}

\item{window_size}{The size of segments. Used for the windowed probability
calculations}

\item{step_size}{The gap between segments. Used for the windowed probability
calculations}
}
\description{
Calibration plot functions. They require a data.frame that contains
the predictions and probability columns. The output is a \code{ggplot2} graph.
}
\details{
\itemize{
\item \code{cal_binary_plot_breaks()} - Splits the data into bins, based on the
number of breaks provided (\code{num_breaks}). The bins are even ranges, starting
at 0, and ending at 1.
\item \code{cal_binary_plot_logistic()} - Fits a logistic spline regression (GAM)
against the data. It then creates a table with the predictions based on 100
probabilities starting at 0, and ending at1.
\item \code{cal_binary_plot_windowed()} - Creates a running percentage of the probability
that moves across the proportion of events.
}
}
\examples{

library(ggplot2)

cal_binary_plot_breaks(
  segment_logistic,
  Class,
  .pred_good
)

cal_binary_plot_logistic(
  segment_logistic,
  Class,
  .pred_good
)

cal_binary_plot_windowed(
  segment_logistic,
  Class,
  .pred_good
)

}
\seealso{
These functions depend on tables built by the following corresponding
functions: \code{\link[=cal_binary_table_breaks]{cal_binary_table_breaks()}}, \code{\link[=cal_binary_table_logistic]{cal_binary_table_logistic()}}, and
\code{\link[=cal_binary_table_windowed]{cal_binary_table_windowed()}}
}
