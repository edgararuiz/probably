% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cal-binary.R
\name{cal_plot_breaks}
\alias{cal_plot_breaks}
\alias{cal_plot_logistic}
\alias{cal_plot_windowed}
\title{Probability Calibration plots}
\usage{
cal_plot_breaks(
  .data,
  truth = NULL,
  estimate = NULL,
  group = NULL,
  num_breaks = 10,
  conf_level = 0.9,
  include_ribbon = TRUE,
  include_rug = TRUE,
  include_points = TRUE,
  event_level = c("first", "second"),
  ...
)

cal_plot_logistic(
  .data,
  truth = NULL,
  estimate = NULL,
  group = NULL,
  conf_level = 0.9,
  smooth = TRUE,
  include_rug = TRUE,
  include_ribbon = TRUE,
  event_level = c("first", "second"),
  ...
)

cal_plot_windowed(
  .data,
  truth = NULL,
  estimate = NULL,
  group = NULL,
  window_size = 0.1,
  step_size = window_size/2,
  conf_level = 0.9,
  include_ribbon = TRUE,
  include_rug = TRUE,
  include_points = FALSE,
  event_level = c("first", "second"),
  ...
)
}
\arguments{
\item{.data}{A data.frame object containing predictions and probability columns.}

\item{truth}{The column identifier for the true class results
(that is a factor). This should be an unquoted column name.}

\item{estimate}{The column identifier for the prediction probabilities.
This should be an unquoted column name}

\item{group}{The column identifier to group the results.}

\item{num_breaks}{The number of segments to group the probabilities. It
defaults to 10.}

\item{conf_level}{Confidence level to use in the visualization. It defaults
to 0.9.}

\item{include_ribbon}{Flag that indicates if the ribbon layer is to be
included. It defaults to \code{TRUE}.}

\item{include_rug}{Flag that indicates if the Rug layer is to be included.
It defaults to \code{TRUE}. In the plot, the top side shows the frequency the
event occurring, and the bottom the frequency of the event not occurring.}

\item{include_points}{Flag that indicates if the point layer is to be included.}

\item{event_level}{single string. Either "first" or "second" to specify which
level of truth to consider as the "event".}

\item{...}{Additional arguments passed to the \code{tune_results} object.}

\item{smooth}{Applies to the logistic models. It switches between logistic
spline when \code{TRUE}, and regular logistic when \code{FALSE}.}

\item{window_size}{The size of segments. Used for the windowed probability
calculations. It defaults to 10\% of segments.}

\item{step_size}{The gap between segments. Used for the windowed probability
calculations. It defaults to half the size of \code{window_size}}
}
\description{
Calibration plot functions. They require a data.frame that contains
the predictions and probability columns. The output is a \code{ggplot2} graph.
}
\details{
\itemize{
\item \code{cal_plot_breaks()} - Splits the data into bins, based on the
number of breaks provided (\code{num_breaks}). The bins are even ranges, starting
at 0, and ending at 1.
\item \code{cal_plot_logistic()} - Fits a logistic spline regression (GAM)
against the data. It then creates a table with the predictions based on 100
probabilities starting at 0, and ending at1.
\item \code{cal_plot_windowed()} - Creates a running percentage of the probability
that moves across the proportion of events.
}
}
\examples{

library(ggplot2)

cal_plot_breaks(
  segment_logistic,
  Class,
  .pred_good
)

cal_plot_logistic(
  segment_logistic,
  Class,
  .pred_good
)

cal_plot_windowed(
  segment_logistic,
  Class,
  .pred_good
)

}
